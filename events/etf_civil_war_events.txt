namespace = etf_civil_war

# State switches controller
country_event = {
	id = etf_civil_war.100
	title = etf_civil_war.100.t # not localized (lazy)
	desc = etf_civil_war.100.d
	picture = CONQUEST_eventPicture
	hidden = yes

	is_triggered_only = yes # Triggered in on_actions, on_siege_won_province

	# ROOT = controller of province
	# FROM = province
	# FROM -> Owner = Owner of province

	# Controller takes control of all provinces in same state as FROM,
	# provinces are ceded to controller, ROOT.

	trigger = {
		FROM = {
			owner = {
				OR = { # In a Civil War:
					is_in_war = {
						attacker_leader = THIS
						defender_leader = ROOT
						casus_belli = cb_civil_war_mutual
					}
					is_in_war = {
						attacker_leader = ROOT
						defender_leader = THIS
						casus_belli = cb_civil_war_mutual
					}
				}
				NOT = { tag = ROOT } # owner != controller
			}
			area_for_scope_province = {
				type = all
				OR = {
					controlled_by = ROOT
					# Owner is uninvolved:
					owner = {
						NOT = {
							OR = {
								is_in_war = {
									attacker_leader = THIS
									defender_leader = ROOT
									casus_belli = cb_civil_war_mutual
								}
								is_in_war = {
									attacker_leader = ROOT
									defender_leader = THIS
									casus_belli = cb_civil_war_mutual
								}
							}
						}
					}
				}
			}
		}
	}

	immediate = {
		FROM = {
			owner = {
				save_event_target_as = old_owner
			}
			area = {
				limit = {
					owned_by = event_target:old_owner
					NOT = {
						is_capital_of = event_target:old_owner # Capital shouldn't constantly move, it's the wargoal!
					}
				}
				cede_province = ROOT
				if = {
					limit = {
						NOT = { is_core = ROOT }
					}
					add_core = ROOT
				}
			}
		}
	}

	option = {
		name = etf_civil_war.100.r
	}
}