# This effect creates an exiled ruler identified with the input parameter $key$.
# Depending on THIS's government type, the effect changes the ruler's name formatting.

# Prime Ministers take their names from the advisor name pool (because they sound less "regal"),
# while other government types are unaffected and simply generate names as normal.
create_ruler_candidate = {
	hidden_effect = {
		# Creates a Prime Minister ruler:
		if = {
			limit = {
				has_government_attribute = has_prime_minister
			}
			random_list = { # 70/30 split between male or female
				70 = {
					set_saved_name = {
						key = candidate_name
						type = advisor
						scope = THIS
						#male = yes
					}
					define_exiled_ruler = {
						exiled_as = $key$
						name = candidate_name
						min_age = 30
						max_age = 65
						[[adm] adm = $adm$]
						[[dip] dip = $dip$]
						[[mil] mil = $mil$]
						[[option] option = $option$] # Different number == different random ruler properties
						male = yes
					}
					clear_saved_name = candidate_name
				}
				30 = {
					trigger = {
						republic_with_female_rulers_trigger = yes
					}
					set_saved_name = {
						key = candidate_name
						type = advisor
						scope = THIS
						female = yes
					}
					define_exiled_ruler = {
						exiled_as = $key$
						name = candidate_name
						min_age = 30
						max_age = 65
						[[adm] adm = $adm$]
						[[dip] dip = $dip$]
						[[mil] mil = $mil$]
						[[option] option = $option$]
						female = yes
					}
					clear_saved_name = candidate_name
				}
			}
		}
		# Creates a Republican ruler:
		else = {
			if = {
				limit = {
					republic_with_female_rulers_trigger = yes
				}
				define_exiled_ruler = {
					exiled_as = $key$
					min_age = 30
					max_age = 65
					[[adm] adm = $adm$]
					[[dip] dip = $dip$]
					[[mil] mil = $mil$]
					[[option] option = $option$]
					random_gender = yes
				}
			}
			else = {
				define_exiled_ruler = {
					exiled_as = $key$
					min_age = 30
					max_age = 65
					[[adm] adm = $adm$]
					[[dip] dip = $dip$]
					[[mil] mil = $mil$]
					[[option] option = $option$]
				}
			}
		}
	}
}

reelect_ruler_effect = {
	custom_tooltip = remains_ruler
	if = {
		limit = { has_government_attribute = has_limited_terms }
		custom_tooltip = current_term_tt
	}
	change_adm = 1
	change_dip = 1
	change_mil = 1
	if = {
		limit = {
			is_tribal = no
			government = republic
			NOT = { republican_tradition = 20 }
			NOT = { is_revolutionary_republic_trigger = yes }
			has_dlc = "Res Publica"
			NOT = { has_government_attribute = cannot_become_dictatorship }
		}
		add_government_reform = presidential_despot_reform
	}
	else_if = {
		limit = {
			government = republic
			NOT = { republican_tradition = 20 }
			is_revolutionary_republic_trigger = yes
		}
		change_government = monarchy
		add_government_reform = revolutionary_empire_reform
	}
	if = {
		limit = {
			is_tribal = no
			government = republic
			NOT = { republican_tradition = 20 }
			NOT = { has_dlc = "Res Publica" }
			NOT = { has_government_attribute = cannot_become_dictatorship }
		}
		change_government = monarchy
		#set_legacy_government = despotic_monarchy
	}
	if = {
		limit = {
			has_reform = single_party_system
			NOT = { republican_tradition = 20 }
		}
		add_government_reform = dictatorial_rule
	}
	if = {
		limit = {
			has_reform = multi_party_system
			NOT = { republican_tradition = 40 }
		}
		add_government_reform = single_party_system
	}
	add_legitimacy = -20
	if = {
		limit = {
			has_country_flag = strengthened_signoria_flag
		}
		custom_tooltip = strengthened_signoria_election_tt
		clr_country_flag = strengthened_signoria_flag
	}
	else = {
		if = {
			limit = {
				has_country_flag = increased_election_cost
			}
			add_scaled_republican_tradition = -15
			clr_country_flag = increased_election_cost
		}
		else = {
			add_scaled_republican_tradition = -10
		}
	}
	random_list = {
		10 = {
			add_adm_power = 50
		}
		10 = {
			add_dip_power = 50
		}
		10 = {
			add_mil_power = 50
		}
	}
	if = {
		limit = {
			has_government_attribute = reelection_depowers_estates
		}
		add_estate_influence_modifier = {
			estate = all
			influence = -10
			duration = 1460
			desc = REELCTION_DEPOWER_ESTATES
		}
	}
	if = {
		limit = { has_government_attribute = elections_influence_estates }
		add_estate_loyalty = {
			estate = all
			loyalty = 5
		}
	}
	if = {
		limit = { has_government_attribute = reelection_increases_absolutism }
		tooltip = {
			add_absolutism = 10
		}
		custom_tooltip = ADD_ABSOLUTISM_BASED_ON_ELECTION_TERM
		hidden_effect = {
			for_variable_amount = {
				variable = election_term
				effect = "
					add_absolutism = 10
				"
			}
		}
		hidden_effect = {
			change_variable = {
				which = election_term
				value = 1
			}
		}
	}
	if = {
		limit = { has_government_attribute = elections_increase_factions_influence }
		add_influence_to_random_faction = {
			influence = 20
		}
	}
	add_karma = -5
	if = {
		limit = {
			has_government_attribute = has_limited_terms
		}
		hidden_effect = {
			change_variable = {
				which = election_term
				value = 1
			}
		}
	}
	
	if = {
		limit = {
			OR = {
				has_government_attribute = has_direct_democracy_election
				has_government_attribute = has_multi_party_election
			}
			OR = {
				AND = {
					has_ruler_flag = ruler_from_conservative_party
					NOT = { faction_in_power = conservative_party }
				}
				AND = {
					has_ruler_flag = ruler_from_liberal_party
					NOT = { faction_in_power = liberal_party }
				}
				AND = {
					has_ruler_flag = ruler_from_nationalist_party
					NOT = { faction_in_power = nationalist_party }
				}
				AND = {
					has_ruler_flag = ruler_from_social_democratic_party
					NOT = { faction_in_power = social_democratic_party }
				}
				AND = {
					has_ruler_flag = ruler_from_communist_party
					NOT = { faction_in_power = communist_party }
				}
				AND = {
					has_ruler_flag = ruler_from_national_socialist_party
					NOT = { faction_in_power = national_socialist_party }
				}
			}
		}
		add_corruption = 2
		add_country_modifier = {
			name = minority_party_won_election
			duration = 365
		}
	}
}

define_prime_minister = {
	if = {
		limit = {
			has_government_attribute = has_prime_minister
		}
		if = {
			limit = {
				[[custom_tooltip] always = no]
			}
			custom_tooltip = define_prime_minister_tt # "New §YPrime Minister§! takes office."
		}
		else = {
			[[custom_tooltip]
				custom_tooltip = $custom_tooltip$
			]
		}
		hidden_effect = {
			# Name
			if = {
				limit = {
					OR = {
						[[name] always = yes]
						always = no
					}
				}
				set_saved_name = {
					key = prime_minister
					type = simple
					name = "$name$"
					[[female] female = yes]
				}
			}
			else = {
				set_saved_name = {
					key = prime_minister
					type = advisor
					[[female] female = yes]
				}
			}
			
			# Gender
			if = {
				limit = {
					OR = {
						[[female] always = yes]
						always = no
					}
				}
				set_variable = {
					which = prime_minister_gender
					value = 1
				}
			}
			else = {
				set_variable = {
					which = prime_minister_gender
					value = 0
				}
			}
			
			# Age
			if = {
				limit = {
					OR = {
						[[age] always = yes]
						always = no
					}
				}
				export_to_variable = {
					which = prime_minister_birth_year
					value = trigger_value:is_year
				}
				subtract_variable = {
					which = prime_minister_birth_year
					value = $age$
				}
			}
			else_if = {
				limit = {
					OR = {
						[[birth_year] always = yes]
						always = no
					}
				}
				set_variable = {
					which = prime_minister_birth_year
					value = $birth_year$
				}
			}
			else = {
				export_to_variable = {
					which = prime_minister_birth_year
					value = trigger_value:is_year
				}
				random_list = {
					25 = { # 30 years old
						subtract_variable = { which = prime_minister_birth_year value = 30 }
					}
					25 = { # 40 years old
						subtract_variable = { which = prime_minister_birth_year value = 40 }
					}
					25 = { # 50 years old
						subtract_variable = { which = prime_minister_birth_year value = 50 }
					}
					25 = { # 60 years old
						subtract_variable = { which = prime_minister_birth_year value = 60 }
					}
				}
				random_list = {
					1 = {
						change_variable = { which = prime_minister_birth_year value = 0 }
					}
					1 = {
						change_variable = { which = prime_minister_birth_year value = 1 }
					}
					1 = {
						change_variable = { which = prime_minister_birth_year value = 2 }
					}
					1 = {
						change_variable = { which = prime_minister_birth_year value = 3 }
					}
					1 = {
						change_variable = { which = prime_minister_birth_year value = 4 }
					}
					1 = {
						change_variable = { which = prime_minister_birth_year value = 5 }
					}
					1 = {
						change_variable = { which = prime_minister_birth_year value = 6 }
					}
					1 = {
						change_variable = { which = prime_minister_birth_year value = 7 }
					}
					1 = {
						change_variable = { which = prime_minister_birth_year value = 8 }
					}
					1 = {
						change_variable = { which = prime_minister_birth_year value = 9 }
					}
				}
			}
			
			# Skills
			if = {
				limit = {
					OR = {
						[[adm] always = yes]
						always = no
					}
				}
				[[adm]
					set_variable = {
						which = prime_minister_adm
						value = $adm$
					}
				]
			}
			else = {
				random_list = {
					14 = {
						trigger = {
							[[max_random_adm]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_adm$
									}
									check_variable = {
										which = cap_var
										value = 0
									}
								}
							]
						}
						set_variable = { which = prime_minister_adm value = 0 }
					}
					14 = {
						trigger = {
							[[max_random_adm]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_adm$
									}
									check_variable = {
										which = cap_var
										value = 1
									}
								}
							]
						}
						set_variable = { which = prime_minister_adm value = 1 }
					}
					14 = {
						trigger = {
							[[max_random_adm]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_adm$
									}
									check_variable = {
										which = cap_var
										value = 2
									}
								}
							]
						}
						set_variable = { which = prime_minister_adm value = 2 }
					}
					14 = {
						trigger = {
							[[max_random_adm]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_adm$
									}
									check_variable = {
										which = cap_var
										value = 3
									}
								}
							]
						}
						set_variable = { which = prime_minister_adm value = 3 }
					}
					14 = {
						trigger = {
							[[max_random_adm]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_adm$
									}
									check_variable = {
										which = cap_var
										value = 4
									}
								}
							]
						}
						set_variable = { which = prime_minister_adm value = 4 }
					}
					14 = {
						trigger = {
							[[max_random_adm]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_adm$
									}
									check_variable = {
										which = cap_var
										value = 5
									}
								}
							]
						}
						set_variable = { which = prime_minister_adm value = 5 }
					}
					14 = {
						trigger = {
							[[max_random_adm]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_adm$
									}
									check_variable = {
										which = cap_var
										value = 6
									}
								}
							]
						}
						set_variable = { which = prime_minister_adm value = 6 }
					}
				}
			}
			if = {
				limit = {
					OR = {
						[[dip] always = yes]
						always = no
					}
				}
				[[dip]
					set_variable = {
						which = prime_minister_dip
						value = $dip$
					}
				]
			}
			else = {
				random_list = {
					14 = {
						trigger = {
							[[max_random_dip]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_dip$
									}
									check_variable = {
										which = cap_var
										value = 0
									}
								}
							]
						}
						set_variable = { which = prime_minister_dip value = 0 }
					}
					14 = {
						trigger = {
							[[max_random_dip]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_dip$
									}
									check_variable = {
										which = cap_var
										value = 1
									}
								}
							]
						}
						set_variable = { which = prime_minister_dip value = 1 }
					}
					14 = {
						trigger = {
							[[max_random_dip]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_dip$
									}
									check_variable = {
										which = cap_var
										value = 2
									}
								}
							]
						}
						set_variable = { which = prime_minister_dip value = 2 }
					}
					14 = {
						trigger = {
							[[max_random_dip]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_dip$
									}
									check_variable = {
										which = cap_var
										value = 3
									}
								}
							]
						}
						set_variable = { which = prime_minister_dip value = 3 }
					}
					14 = {
						trigger = {
							[[max_random_dip]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_dip$
									}
									check_variable = {
										which = cap_var
										value = 4
									}
								}
							]
						}
						set_variable = { which = prime_minister_dip value = 4 }
					}
					14 = {
						trigger = {
							[[max_random_dip]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_dip$
									}
									check_variable = {
										which = cap_var
										value = 5
									}
								}
							]
						}
						set_variable = { which = prime_minister_dip value = 5 }
					}
					14 = {
						trigger = {
							[[max_random_dip]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_dip$
									}
									check_variable = {
										which = cap_var
										value = 6
									}
								}
							]
						}
						set_variable = { which = prime_minister_dip value = 6 }
					}
				}
			}
			if = {
				limit = {
					OR = {
						[[mil] always = yes]
						always = no
					}
				}
				[[mil]
					set_variable = {
						which = prime_minister_mil
						value = $mil$
					}
				]
			}
			else = {
				random_list = {
					14 = {
						trigger = {
							[[max_random_mil]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_mil$
									}
									check_variable = {
										which = cap_var
										value = 0
									}
								}
							]
						}
						set_variable = { which = prime_minister_mil value = 0 }
					}
					14 = {
						trigger = {
							[[max_random_mil]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_mil$
									}
									check_variable = {
										which = cap_var
										value = 1
									}
								}
							]
						}
						set_variable = { which = prime_minister_mil value = 1 }
					}
					14 = {
						trigger = {
							[[max_random_mil]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_mil$
									}
									check_variable = {
										which = cap_var
										value = 2
									}
								}
							]
						}
						set_variable = { which = prime_minister_mil value = 2 }
					}
					14 = {
						trigger = {
							[[max_random_mil]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_mil$
									}
									check_variable = {
										which = cap_var
										value = 3
									}
								}
							]
						}
						set_variable = { which = prime_minister_mil value = 3 }
					}
					14 = {
						trigger = {
							[[max_random_mil]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_mil$
									}
									check_variable = {
										which = cap_var
										value = 4
									}
								}
							]
						}
						set_variable = { which = prime_minister_mil value = 4 }
					}
					14 = {
						trigger = {
							[[max_random_mil]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_mil$
									}
									check_variable = {
										which = cap_var
										value = 5
									}
								}
							]
						}
						set_variable = { which = prime_minister_mil value = 5 }
					}
					14 = {
						trigger = {
							[[max_random_mil]
								variable_arithmetic_trigger = {
									export_to_variable = {
										which = cap_var
										value = $max_random_mil$
									}
									check_variable = {
										which = cap_var
										value = 6
									}
								}
							]
						}
						set_variable = { which = prime_minister_mil value = 6 }
					}
				}
			}
			
			set_variable = {
				which = prime_minister_adm_temp
				which = prime_minister_adm
			}
			set_variable = {
				which = prime_minister_dip_temp
				which = prime_minister_dip
			}
			set_variable = {
				which = prime_minister_mil_temp
				which = prime_minister_mil
			}
			
			update_scaling_modifier = {
				name = prime_minister_adm_modifier
				tooltip_name = prime_minister_modifier
				duration = -1
				type = country
				which = prime_minister_adm_temp
			}
			update_scaling_modifier = {
				name = prime_minister_dip_modifier
				tooltip_name = prime_minister_modifier
				duration = -1
				type = country
				which = prime_minister_dip_temp
			}
			update_scaling_modifier = {
				name = prime_minister_mil_modifier
				tooltip_name = prime_minister_modifier
				duration = -1
				type = country
				which = prime_minister_mil_temp
			}
			
			# Culture
			if = {
				limit = {
					OR = {
						[[culture] always = yes]
						always = no
					}
					any_province = {
						culture = $culture$
					}
				}
				random_province = {
					limit = {
						culture = $culture$
					}
					PREV = {
						export_to_variable = {
							which = prime_minister_culture
							value = culture
							who = PREV
						}
					}
				}
			}
			else = {
				export_to_variable = {
					which = prime_minister_culture
					value = primary_culture
				}
			}
			
			# Religion
			if = {
				limit = {
					OR = {
						[[religion] always = yes]
						always = no
					}
					any_province = {
						religion = $religion$
					}
				}
				random_province = {
					limit = {
						religion = $religion$
					}
					PREV = {
						export_to_variable = {
							which = prime_minister_religion
							value = religion
							who = PREV
						}
					}
				}
			}
			else = {
				if = {
					limit = {
						religion = secularism
					}
					export_to_variable = {
						which = prime_minister_religion
						value = dominant_religion
					}
				}
				else = {
					export_to_variable = {
						which = prime_minister_religion
						value = religion
					}
				}
			}
			
			log = define_prime_minister_log
			set_country_flag = has_prime_minister_flag
		}
	}
}

kill_prime_minister = {
	if = {
		limit = {
			has_government_attribute = has_prime_minister
		}
		if = {
			limit = {
				[[custom_tooltip] always = no]
			}
			custom_tooltip = kill_prime_minister_tt # "Current Prime Minister (§Y[This.prime_minister.GetName]§!) will die."
		}
		else = {
			[[custom_tooltip]
				custom_tooltip = $custom_tooltip$
			]
		}
	}
	hidden_effect = {
		set_saved_name = {
			key = prime_minister
			type = simple
			name = "(Vacant)"
		}
		
		set_variable = {
			which = prime_minister_gender
			value = -1
		}
		
		set_variable = {
			which = prime_minister_birth_year
			value = -1
		}
		
		set_variable = {
			which = prime_minister_adm
			value = -1
		}
		set_variable = {
			which = prime_minister_dip
			value = -1
		}
		set_variable = {
			which = prime_minister_mil
			value = -1
		}
		
		update_scaling_modifier = {
			name = prime_minister_adm_modifier
			tooltip_name = prime_minister_modifier
			duration = -1
			type = country
			which = prime_minister_adm
		}
		update_scaling_modifier = {
			name = prime_minister_dip_modifier
			tooltip_name = prime_minister_modifier
			duration = -1
			type = country
			which = prime_minister_dip
		}
		update_scaling_modifier = {
			name = prime_minister_mil_modifier
			tooltip_name = prime_minister_modifier
			duration = -1
			type = country
			which = prime_minister_mil
		}
		
		set_variable = {
			which = prime_minister_culture
			value = -1
		}
		set_variable = {
			which = prime_minister_religion
			value = -1
		}
		
		clr_country_flag = has_prime_minister_flag
	}
}

turn_prime_minister_into_ruler = {
	define_ruler = {
		name = prime_minister
	}
	hidden_effect = {
		kill_prime_minister = yes
	}
}