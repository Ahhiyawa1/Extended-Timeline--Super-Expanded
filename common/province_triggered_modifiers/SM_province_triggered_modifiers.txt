SM_wonderwork_workshop_construction_modifier = {
	potential = {
		always = yes
	}
	trigger = {
		has_construction = great_project
	}
	local_build_time = -0.1
	on_activation = {
	}
	on_deactivation = {
		hidden_effect = {
			province_event = {
				id = SM_wonderwork_workshop_events.2
			}
		}
	}
}
SM_monthly_effects_province_triggered_modifier = {
	potential = { always = yes }
	trigger = {
		OR = {
			is_month = 11
			AND = {
				is_month = 9
				NOT = { is_month = 10 }
			}
			AND = {
				is_month = 7
				NOT = { is_month = 8 }
			}
			AND = {
				is_month = 5
				NOT = { is_month = 6 }
			}
			AND = {
				is_month = 3
				NOT = { is_month = 4 }
			}
			AND = {
				is_month = 1
				NOT = { is_month = 2 }
			}
		}
	}
	hidden = yes
	#Province scope
	on_activation = {
		#set province flag to allow other mod reference monument (its province and its owner) in this mod without having missing reference error in the log
		#monument_01
		SM_set_monument_flag_effects = { MONUMENT = SM_towering_granary }
		SM_set_monument_flag_effects = { MONUMENT = SM_exclusive_cloves_market }
		SM_set_monument_flag_effects = { MONUMENT = SM_arctic_research_center }
		SM_set_monument_flag_effects = { MONUMENT = SM_privateering_haven_and_emporium }
		SM_set_monument_flag_effects = { MONUMENT = SM_city_state_of_the_world }
		#monument_02
		SM_set_monument_flag_effects = { MONUMENT = SM_great_observatory }
		SM_set_monument_flag_effects = { MONUMENT = SM_high_seas_navigation_academy }
		SM_set_monument_flag_effects = { MONUMENT = SM_sanctuary_of_harmony }
		SM_set_monument_flag_effects = { MONUMENT = SM_world_heritage_exhibition }
		SM_set_monument_flag_effects = { MONUMENT = SM_trade_company_quarter }
		#monument_03
		SM_set_monument_flag_effects = { MONUMENT = SM_pillar_of_independence }
		SM_set_monument_flag_effects = { MONUMENT = SM_world_merchant_organization }
		SM_set_monument_flag_effects = { MONUMENT = SM_center_of_diplomatic_studies }
		SM_set_monument_flag_effects = { MONUMENT = SM_heavenly_imperial_court }
		SM_set_monument_flag_effects = { MONUMENT = SM_march_military_institute }
		#monument_04
		SM_set_monument_flag_effects = { MONUMENT = SM_imperial_italy_memorial }
		SM_set_monument_flag_effects = { MONUMENT = SM_naval_engineering_complex }
		SM_set_monument_flag_effects = { MONUMENT = SM_beacon_of_the_sea }
		SM_set_monument_flag_effects = { MONUMENT = SM_seat_of_colonial_authority }
		SM_set_monument_flag_effects = { MONUMENT = SM_wondrous_garden_in_the_desert }
		#monument_05
		SM_set_monument_flag_effects = { MONUMENT = SM_the_golden_mosque }
		SM_set_monument_flag_effects = { MONUMENT = SM_wonderwork_workshop }
		SM_set_monument_flag_effects = { MONUMENT = SM_institute_of_progress_and_reforms }
		SM_set_monument_flag_effects = { MONUMENT = SM_house_of_dharmic_learning }
		SM_set_monument_flag_effects = { MONUMENT = SM_the_stark_palace_and_fortress }
		#monument_06
		SM_set_monument_flag_effects = { MONUMENT = SM_library_of_muslim_schools }
		SM_set_monument_flag_effects = { MONUMENT = SM_grand_caravan_trading_square }
		SM_set_monument_flag_effects = { MONUMENT = SM_the_caliphate_great_hall }

		every_country = {
			every_owned_province = {
				#Grand Caravan Trading Square
				if = {
					limit = {
						has_global_flag = SM_grand_caravan_trading_square_spawned_global_flag
					}
					remove_province_modifier = SM_grand_caravan_trading_square_tier_1_modifier
					remove_province_modifier = SM_grand_caravan_trading_square_tier_2_modifier
					remove_province_modifier = SM_grand_caravan_trading_square_tier_3_modifier
				}
				#monument_01
				clr_province_flag = SM_towering_granary_province_flag
				clr_province_flag = SM_exclusive_cloves_market_province_flag
				clr_province_flag = SM_arctic_research_center_province_flag
				clr_province_flag = SM_privateering_haven_and_emporium_province_flag
				clr_province_flag = SM_city_state_of_the_world_flag
				#monument_02
				clr_province_flag = SM_great_observatory_flag
				clr_province_flag = SM_high_seas_navigation_academy_flag
				clr_province_flag = SM_sanctuary_of_harmony_flag
				clr_province_flag = SM_world_heritage_exhibition_flag
				clr_province_flag = SM_trade_company_quarter_flag
				#monument_03
				clr_province_flag = SM_pillar_of_independence_province_flag
				clr_province_flag = SM_world_merchant_organization_province_flag
				clr_province_flag = SM_center_of_diplomatic_studies_province_flag
				clr_province_flag = SM_heavenly_imperial_court_province_flag
				clr_province_flag = SM_march_military_institute_province_flag
				#monument_04
				clr_province_flag = SM_imperial_italy_memorial_province_flag
				clr_province_flag = SM_naval_engineering_complex_province_flag
				clr_province_flag = SM_beacon_of_the_sea_province_flag
				clr_province_flag = SM_seat_of_colonial_authority_province_flag
				clr_province_flag = SM_wondrous_garden_in_the_desert_province_flag
				#monument_05
				clr_province_flag = SM_the_golden_mosque_province_flag
				clr_province_flag = SM_wonderwork_workshop_province_flag
				clr_province_flag = SM_institute_of_progress_and_reforms_province_flag
				clr_province_flag = SM_house_of_dharmic_learning_province_flag
				clr_province_flag = SM_the_stark_palace_and_fortress_province_flag
				#monument_06
				clr_province_flag = SM_library_of_muslim_schools_province_flag
				clr_province_flag = SM_grand_caravan_trading_square_province_flag
				clr_province_flag = SM_the_caliphate_great_hall_province_flag
			}
			#Naval Engineering Complex
			remove_country_modifier = SM_naval_engineering_complex_tier_1_modifier
			remove_country_modifier = SM_naval_engineering_complex_tier_2_modifier
			remove_country_modifier = SM_naval_engineering_complex_tier_3_modifier
			#Seat of Colonial Authority
			remove_country_modifier = SM_seat_of_colonial_authority_native_policy_coexist_modifier
			remove_country_modifier = SM_seat_of_colonial_authority_native_policy_hostile_modifier
			remove_country_modifier = SM_seat_of_colonial_authority_native_policy_trade_modifier
			#World Merchant Organization
			remove_country_modifier = SM_world_merchant_organization_tier_1_modifier
			remove_country_modifier = SM_world_merchant_organization_tier_2_modifier
			remove_country_modifier = SM_world_merchant_organization_tier_3_modifier
			#Grand Caravan Trading Square
			clr_country_flag = SM_grand_caravan_trading_square_effect_recipient_flag
			#Get variable for muslim school count, no longer run after Library of Muslem Schools spawned
			if = {
				limit = { 
					has_global_flag = SM_library_of_muslim_schools_enabled_global_flag
					NOT = { has_global_flag = SM_library_of_muslim_schools_spawned_global_flag }
					religion_group = muslim
				}
				set_variable = { which = SM_has_good_relation_with_religious_school_effects	value = 0 }
				SM_has_good_relation_with_religious_school_effects = { SCHOOL = hanafi_school }
				SM_has_good_relation_with_religious_school_effects = { SCHOOL = hanbali_school }
				SM_has_good_relation_with_religious_school_effects = { SCHOOL = maliki_school }
				SM_has_good_relation_with_religious_school_effects = { SCHOOL = shafii_school }
				SM_has_good_relation_with_religious_school_effects = { SCHOOL = ismaili_school }
				SM_has_good_relation_with_religious_school_effects = { SCHOOL = jafari_school }
				SM_has_good_relation_with_religious_school_effects = { SCHOOL = saidi_school }
			}
		}
		#Naval Engineering Complex Effect
		if = {
			limit = { 
				has_global_flag = SM_naval_engineering_complex_spawned_global_flag
				event_target:SM_naval_engineering_complex_province = {
					SM_naval_engineering_complex_usage_triggers = yes
				}
			}
			trigger_switch = {
				on_trigger = has_global_flag
				SM_naval_engineering_complex_tier_3_global_flag = {
					event_target:SM_naval_engineering_complex_owner = {
						every_subject_country = {
							limit = { NOT = { is_subject_of_type = tributary_state } }
							add_country_modifier = { name = SM_naval_engineering_complex_tier_3_modifier duration = -1 }
						}
						every_ally = { add_country_modifier = { name = SM_naval_engineering_complex_tier_3_modifier duration = -1 } }
						overlord = { add_country_modifier = { name = SM_naval_engineering_complex_tier_3_modifier duration = -1 } }
						if = {
							limit = { is_in_trade_league = yes }
							every_country = {
								limit = { is_in_trade_league_with = event_target:SM_naval_engineering_complex_owner }
								add_country_modifier = { name = SM_naval_engineering_complex_tier_3_modifier duration = -1 }
							}
						}
					}
				}
				SM_naval_engineering_complex_tier_2_global_flag = {
					event_target:SM_naval_engineering_complex_owner = {
						every_subject_country = {
							limit = { NOT = { is_subject_of_type = tributary_state } }
							add_country_modifier = { name = SM_naval_engineering_complex_tier_2_modifier duration = -1 }
						}
						every_ally = { add_country_modifier = { name = SM_naval_engineering_complex_tier_2_modifier duration = -1 } }
						overlord = { add_country_modifier = { name = SM_naval_engineering_complex_tier_2_modifier duration = -1 } }
						if = {
							limit = { is_in_trade_league = yes }
							every_country = {
								limit = { is_in_trade_league_with = event_target:SM_naval_engineering_complex_owner }
								add_country_modifier = { name = SM_naval_engineering_complex_tier_2_modifier duration = -1 }
							}
						}
					}
				}
				SM_naval_engineering_complex_tier_1_global_flag = {
					event_target:SM_naval_engineering_complex_owner = {
						every_subject_country = {
							limit = { NOT = { is_subject_of_type = tributary_state } }
							add_country_modifier = { name = SM_naval_engineering_complex_tier_1_modifier duration = -1 }
						}
						every_ally = { add_country_modifier = { name = SM_naval_engineering_complex_tier_1_modifier duration = -1 } }
						overlord = { add_country_modifier = { name = SM_naval_engineering_complex_tier_1_modifier duration = -1 } }
						if = {
							limit = { is_in_trade_league = yes }
							every_country = {
								limit = { is_in_trade_league_with = event_target:SM_naval_engineering_complex_owner }
								add_country_modifier = { name = SM_naval_engineering_complex_tier_1_modifier duration = -1 }
							}
						}
					}
				}
			}
		}
		#Seat of Colonial Authority
		if = {
			limit = { 
				has_global_flag = SM_seat_of_colonial_authority_spawned_global_flag
				event_target:SM_seat_of_colonial_authority_province = {
					SM_seat_of_colonial_authority_usage_triggers = yes
				}
			}
			event_target:SM_seat_of_colonial_authority_owner = {
				trigger_switch = {
					on_trigger = native_policy
					native_policy_coexist = {
						every_subject_country = {
							limit = { is_colonial_nation = yes }
							add_country_modifier = {
								name = SM_seat_of_colonial_authority_native_policy_coexist_modifier
								duration = -1
							}
						}
					}
					native_policy_trade = {
						every_subject_country = {
							limit = { is_colonial_nation = yes }
							add_country_modifier = {
								name = SM_seat_of_colonial_authority_native_policy_trade_modifier
								duration = -1
							}
						}
					}
					native_policy_hostile = {
						every_subject_country = {
							limit = { is_colonial_nation = yes }
							add_country_modifier = {
								name = SM_seat_of_colonial_authority_native_policy_hostile_modifier
								duration = -1
							}
						}
					}
				}
			}
		}
		#World Merchant Organization
		if = {
			limit = { 
				has_global_flag = SM_world_merchant_organization_spawned_global_flag
				event_target:SM_world_merchant_organization_province = {
					SM_world_merchant_organization_usage_triggers = yes
				}
			}
			trigger_switch = {
				on_trigger = has_global_flag 
				SM_world_merchant_organization_tier_3_global_flag = {
					event_target:SM_world_merchant_organization_owner = {
						every_subject_country = {
							limit = { NOT = { is_subject_of_type = tributary_state } }
							add_country_modifier = { name = SM_world_merchant_organization_tier_3_modifier duration = -1 }
						}
						every_ally = { add_country_modifier = { name = SM_world_merchant_organization_tier_3_modifier duration = -1 } }
						overlord = { add_country_modifier = { name = SM_world_merchant_organization_tier_3_modifier duration = -1 } }
						if = {
							limit = { is_in_trade_league = yes }
							every_country = {
								limit = { is_in_trade_league_with = event_target:SM_world_merchant_organization_owner }
								add_country_modifier = { name = SM_world_merchant_organization_tier_3_modifier duration = -1 }
							}
						}
					}
				}
				SM_world_merchant_organization_tier_2_global_flag = {
					event_target:SM_world_merchant_organization_owner = {
						every_subject_country = {
							limit = { NOT = { is_subject_of_type = tributary_state } }
							add_country_modifier = { name = SM_world_merchant_organization_tier_2_modifier duration = -1 }
						}
						every_ally = { add_country_modifier = { name = SM_world_merchant_organization_tier_2_modifier duration = -1 } }
						overlord = { add_country_modifier = { name = SM_world_merchant_organization_tier_2_modifier duration = -1 } }
						if = {
							limit = { is_in_trade_league = yes }
							every_country = {
								limit = { is_in_trade_league_with = event_target:SM_world_merchant_organization_owner }
								add_country_modifier = { name = SM_world_merchant_organization_tier_2_modifier duration = -1 }
							}
						}
					}
				}
				SM_world_merchant_organization_tier_1_global_flag = {
					event_target:SM_world_merchant_organization_owner = {
						every_subject_country = {
							limit = { NOT = { is_subject_of_type = tributary_state } }
							add_country_modifier = { name = SM_world_merchant_organization_tier_1_modifier duration = -1 }
						}
						every_ally = { add_country_modifier = { name = SM_world_merchant_organization_tier_1_modifier duration = -1 } }
						overlord = { add_country_modifier = { name = SM_world_merchant_organization_tier_1_modifier duration = -1 } }
						if = {
							limit = { is_in_trade_league = yes }
							every_country = {
								limit = { is_in_trade_league_with = event_target:SM_world_merchant_organization_owner }
								add_country_modifier = { name = SM_world_merchant_organization_tier_1_modifier duration = -1 }
							}
						}
					}
				}
			}
		}
		#Wonderwork Workshop
		if = {
			limit = { has_global_flag = SM_wonderwork_workshop_spawned_global_flag }
			event_target:SM_wonderwork_workshop_owner = {
				every_owned_province = {
					limit = {
						has_construction = great_project
						NOT = { has_active_triggered_province_modifier = SM_wonderwork_workshop_construction_modifier }
					}
					add_province_triggered_modifier = SM_wonderwork_workshop_construction_modifier
				}
				every_subject_country = {
					limit = { is_subject_other_than_tributary_trigger = yes }
					every_owned_province = {
						limit = {
							has_construction = great_project
							NOT = { has_active_triggered_province_modifier = SM_wonderwork_workshop_construction_modifier }
						}
						add_province_triggered_modifier = SM_wonderwork_workshop_construction_modifier
					}
				}
			}
		}
		#Grand Caravan Trading Square
		if = {
			limit = {
				has_global_flag = SM_grand_caravan_trading_square_spawned_global_flag
				event_target:SM_grand_caravan_trading_square_province = {
					SM_grand_caravan_trading_square_usage_triggers = yes
				}
			}
			REB = {
				set_variable = {
					which = SM_num_of_inland_trade_node_loop_var
					which = SM_num_of_inland_trade_node_var
				}
			}
			event_target:SM_grand_caravan_trading_square_owner = {
				set_country_flag = SM_grand_caravan_trading_square_effect_recipient_flag
				every_ally = { set_country_flag = SM_grand_caravan_trading_square_effect_recipient_flag }
				every_subject_country = {
					limit = { is_subject_other_than_tributary_trigger = yes }
					set_country_flag = SM_grand_caravan_trading_square_effect_recipient_flag
				}
				if = {
					limit = { is_in_trade_league = yes }
					every_country = {
						limit = { is_in_trade_league_with = event_target:SM_grand_caravan_trading_square_owner }
						set_country_flag = SM_grand_caravan_trading_square_effect_recipient_flag
					}
				}
			}
			trigger_switch = {
				on_trigger = has_global_flag
				SM_grand_caravan_trading_square_tier_3_global_flag = { SM_grand_caravan_trading_square_execute_effects = { TIER = tier_3 } }
				SM_grand_caravan_trading_square_tier_2_global_flag = { SM_grand_caravan_trading_square_execute_effects = { TIER = tier_2 } }
				SM_grand_caravan_trading_square_tier_1_global_flag = { SM_grand_caravan_trading_square_execute_effects = { TIER = tier_1 } }
			}
		}
	}
	on_deactivation = {
	}
}